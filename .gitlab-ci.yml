image: registry.scader.eu/automation/docker/centos-homepage:latest

stages:
- build
- deploy

variables:
  FTP_HOST: www138.your-server.de
  GITHUB_URL: https://github.com/artem-sidorenko/www.sidorenko.io.git

.build-job: &build-job
  stage: build
  script:
  - hugo --baseURL $BASE_URL
  - test -f public/index.html
  artifacts:
    expire_in: 90d
    paths:
    - public

.deploy-job: &deploy-job
  stage: deploy
  script:
  - lftp -c "set ftps:initial-prot ''; set ftp:ssl-force true; set ftp:ssl-protect-data true; open ftp://$FTP_USER:$FTP_PASS@$FTP_HOST:21; mirror -eRv public $FTP_ENV; quit;"

.cleanup-job: &cleanup-job
  stage: deploy
  when: manual
  script:
  - lftp -c "set ftps:initial-prot ''; set ftp:ssl-force true; set ftp:ssl-protect-data true; open ftp://$FTP_USER:$FTP_PASS@$FTP_HOST:21; rm -r $FTP_ENV; mkdir $FTP_ENV; quit;"

build for development:
  <<: *build-job
  variables:
    BASE_URL: https://dev.sidorenko.io
  except:
    - master

deploy to development:
  <<: *deploy-job
  when: manual
  except:
    - master
  variables:
    FTP_ENV: dev
  environment:
    name: development
    url: https://dev.sidorenko.io
    on_stop: cleanup development

cleanup development:
  <<: *cleanup-job
  except:
    - master
  variables:
    FTP_ENV: dev
  environment:
    name: development
    action: stop

build for production:
  <<: *build-job
  variables:
    BASE_URL: https://www.sidorenko.io
  only:
    - master

deploy to production:
  <<: *deploy-job
  only:
  - master
  variables:
    FTP_ENV: prod
  environment:
    name: production
    url: https://www.sidorenko.io

update github:
  stage: deploy
  only:
  - master
  script:
  - echo $GITHUB_AUTH_SECRET > ~/.git-credentials && chmod 0600 ~/.git-credentials
  - git config --global credential.helper store
  - git config --global user.email "artem-bot@users.noreply.github.com"
  - git config --global user.name "Artems Bot"
  - git config --global push.default simple
  - git push $GITHUB_URL master:master
